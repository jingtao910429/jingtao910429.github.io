<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>倔强的小码农</title>
    <link>http://jingtaotao.top/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Coder</description>
    <pubDate>Wed, 31 Oct 2018 03:54:23 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>iOS有关WebView采坑总结</title>
      <link>http://jingtaotao.top/2018/10/31/WebView%E9%87%87%E5%9D%91%E6%80%BB%E7%BB%93/</link>
      <guid>http://jingtaotao.top/2018/10/31/WebView%E9%87%87%E5%9D%91%E6%80%BB%E7%BB%93/</guid>
      <pubDate>Wed, 31 Oct 2018 02:17:46 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;iOS中关于WKWebView和UIWebView区别及使用方式，网上资料很多，这里不再重复叙述，&lt;a href=&quot;https://developer.apple.com/documentation/webkit/wkwebview&quot; target=&quot;_blank&quot; rel
        
      
      </description>
      
      <content:encoded><![CDATA[<p>iOS中关于WKWebView和UIWebView区别及使用方式，网上资料很多，这里不再重复叙述，<a href="https://developer.apple.com/documentation/webkit/wkwebview" target="_blank" rel="noopener">WKWebview文档</a>，笔者曾对WebView相关做过组件化，有兴趣的可以参考 <a href="https://github.com/jingtao910429/TBInteractiveProtocol" target="_blank" rel="noopener">TBInteractiveProtocol</a>。<br>文档中有很多开发者未曾注意过的细节，例如，WebView方法调用的线程选择：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Important</span><br><span class="line">Call WebKit functions and methods only from your app’s main thread or main dispatch queue.</span><br></pre></td></tr></table></figure><h2 id="WebView加载线程"><a href="#WebView加载线程" class="headerlink" title="WebView加载线程"></a>WebView加载线程</h2><p>如文档所述，WebKit的方法调用只能在主线程，如果不是，会导致白屏或者其他未知错误。例如Html片段如下：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">    <span class="keyword">self</span>.webView.loadHTMLString(html, baseURL: <span class="type">Bundle</span>.main.bundleURL)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="WebView加载HTML片段"><a href="#WebView加载HTML片段" class="headerlink" title="WebView加载HTML片段"></a>WebView加载HTML片段</h2><h3 id="BaseURL设置"><a href="#BaseURL设置" class="headerlink" title="BaseURL设置"></a>BaseURL设置</h3><p><code>loadHTMLString</code>方法中<code>baseURL</code>的设置一般设置为<code>nil</code>没什么问题，但是会出现 <code>WebView</code> 加载不上的现象，此时设置<code>baseURL</code>是一个好的选择，具体可参考 <a href="https://stackoverflow.com/questions/37013812/wkwebview-wont-loadhtmlstring" target="_blank" rel="noopener">https://stackoverflow.com/questions/37013812/wkwebview-wont-loadhtmlstring</a></p><h3 id="WebView内容高度计算不准确"><a href="#WebView内容高度计算不准确" class="headerlink" title="WebView内容高度计算不准确"></a>WebView内容高度计算不准确</h3><p>高度计算一般使用<code>stringByEvaluatingJavaScript</code>获取。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> height = webView.stringByEvaluatingJavaScript(from: <span class="string">"document.body.scrollHeight"</span>)?.toFloat() &#123;</span><br><span class="line">    <span class="comment">//webview高度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中<code>toFloat()</code>方法的定义：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">toFloat</span><span class="params">()</span></span> -&gt; <span class="type">Float</span>? &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> num = <span class="type">NumberFormatter</span>().number(from: <span class="keyword">self</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> num.floatValue</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对于<code>scrollHeight</code>、<code>offSetHeight</code>的区别，可参考 <a href="https://www.jianshu.com/p/d267456ebc0d" target="_blank" rel="noopener">图解scrollHeight, clientHeight, offsetHeight, scrollTop以及获取方法</a> 以及其他相关文章。<br>但是会发现，此时的高度并不准确，原因在于html片段，并没有设置<code>meta</code>标签，一般的<code>meta</code>标签设置如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">\</span>"<span class="attr">viewport</span>\" <span class="attr">content</span>=<span class="string">\</span>"<span class="attr">width</span>=<span class="string">device-width</span>",<span class="attr">initial-scale</span>=<span class="string">1,minimum-scale</span>=<span class="string">1,maximum-scale</span>=<span class="string">1,user-scalable</span>=<span class="string">no\</span>" /&gt;</span>"</span><br></pre></td></tr></table></figure></p><p>其中<code>width</code>设置的是<code>device-width</code>，也就是屏幕宽度，但是实际上，WebView的加载并不是完全等于<code>device-width</code>，所以该字段应该根据实际的WebView宽度进行设置。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">formateHtml</span><span class="params">(width: String = <span class="string">"device-width"</span>)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"&lt;meta name=\"viewport\" content=\"width="</span> + width + <span class="string">",initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" /&gt;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="Cell中WebView的复用"><a href="#Cell中WebView的复用" class="headerlink" title="Cell中WebView的复用"></a>Cell中WebView的复用</h2><h3 id="高度记录"><a href="#高度记录" class="headerlink" title="高度记录"></a>高度记录</h3><p>一般对于WebView的复用问题，首先要记录加载之后的高度，或者是预处理计算高度。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fileprivate</span> <span class="keyword">var</span> valueHeights: [<span class="type">IndexPath</span>: <span class="type">CGFloat</span>] = [:]</span><br></pre></td></tr></table></figure></p><h3 id="反向刷新"><a href="#反向刷新" class="headerlink" title="反向刷新"></a>反向刷新</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//block可自行定义</span></span><br><span class="line">cell?.caculateWebViewHeightBlock = &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] (height) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> `<span class="keyword">self</span>` = <span class="keyword">self</span> <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.valueHeights[indexPath] = height</span><br><span class="line">    <span class="comment">//需要记录高度,刷新cell高度</span></span><br><span class="line">    <span class="keyword">self</span>.tableView.reloadData()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><blockquote><p><strong><font color="red" size="3" face="黑体">高度再次传入Cell进行控制，注意如果已知高度，则不需要在loadHtml之后调用block回传高度，否则会死循环！！！！！！</font></strong></p></blockquote><h2 id="如果不存在复用，则可以提前计算加载的高度，然后直接刷新视图。"><a href="#如果不存在复用，则可以提前计算加载的高度，然后直接刷新视图。" class="headerlink" title="如果不存在复用，则可以提前计算加载的高度，然后直接刷新视图。"></a>如果不存在复用，则可以提前计算加载的高度，然后直接刷新视图。</h2><p>笔者的<code>CaculateWebViewManager</code>类可作参考。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> WebKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">typealias</span> <span class="type">CaculateWebViewHeightBlock</span> = ((<span class="number">_</span> height: <span class="type">CGFloat</span>) -&gt; <span class="type">Void</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CaculateWebViewManager</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="keyword">var</span> caculateWebView: <span class="type">WKWebView</span>!</span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="keyword">var</span> heightBlock: <span class="type">CaculateWebViewHeightBlock</span>?</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>()</span><br><span class="line">        caculateWebView = <span class="type">WKWebView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, w: kAdaptScreenWidth, h: <span class="number">0</span>))</span><br><span class="line">        caculateWebView.navigationDelegate = <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">caculateHeight</span><span class="params">(width: CGFloat, html: String, heightBlock: CaculateWebViewHeightBlock?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.heightBlock = heightBlock</span><br><span class="line">        </span><br><span class="line">        caculateWebView.frame = <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, w: width, h: <span class="number">10</span>)</span><br><span class="line">        caculateWebView.loadHTMLString(html, baseURL: <span class="type">Bundle</span>.main.bundleURL)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">fetchDetailHtml</span>(<span class="title">searchTopicWordsRecord</span>: <span class="title">KnowleadgeDetailContentModel</span>?, <span class="title">width</span>: <span class="title">CGFloat</span>) -&gt; (<span class="title">String</span>, <span class="title">CGFloat</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> tWidth = width - <span class="number">12</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> record = searchTopicWordsRecord &#123;</span><br><span class="line">            <span class="keyword">var</span> html = <span class="string">""</span></span><br><span class="line">            <span class="keyword">let</span> htmlMeta = formateHtml(width: <span class="string">"\(Int(tWidth))px"</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> record.subjectId == <span class="string">"1"</span> &#123;</span><br><span class="line">                html = <span class="string">"\(htmlMeta)&lt;p style=\"font-size:16px;text-align:center;\"&gt;\(record.description)&lt;/p&gt;"</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                html = <span class="string">"\(htmlMeta)\(record.richDescription)"</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (html, tWidth)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">""</span>, tWidth)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">fetchSplitAssociateHtml</span>(<span class="title">type</span>: <span class="title">Int</span>, <span class="title">subjectId</span>: <span class="title">String</span>, <span class="title">splitOrAssociate</span>: <span class="title">String</span>?, <span class="title">width</span>: <span class="title">CGFloat</span>) -&gt; (<span class="title">String</span>, <span class="title">CGFloat</span>) </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> tWidth = width - <span class="number">15</span></span><br><span class="line">        <span class="keyword">let</span> htmlMeta = formateHtml(width: <span class="string">"\(Int(tWidth))px"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> splitOrAssociate != <span class="string">""</span> &amp;&amp; type == <span class="number">0</span> &amp;&amp; subjectId == <span class="string">"1"</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">var</span> html = <span class="string">"\(htmlMeta)"</span></span><br><span class="line">            <span class="keyword">let</span> array = splitOrAssociate!.components(separatedBy: <span class="string">"~"</span>)</span><br><span class="line">            <span class="keyword">for</span> (index, item) <span class="keyword">in</span> array.enumerated() &#123;</span><br><span class="line">                <span class="keyword">if</span> index%<span class="number">2</span> == <span class="number">1</span> &#123;</span><br><span class="line">                    html.append(<span class="string">"&amp;nbsp&lt;span style=\"color: red;\"&gt;\(item)&lt;/span&gt;&amp;nbsp"</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    html.append(item)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (html, tWidth)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> splitOrAssociate = splitOrAssociate &#123;</span><br><span class="line">            <span class="keyword">let</span> <span class="built_in">split</span> = <span class="string">"\(htmlMeta)\(splitOrAssociate)"</span></span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">split</span>, tWidth)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">""</span>, tWidth)</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CaculateWebViewManager</span>: <span class="title">WKNavigationDelegate</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">webView</span><span class="params">(<span class="number">_</span> webView: WKWebView, didStartProvisionalNavigation navigation: WKNavigation!)</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">webView</span><span class="params">(<span class="number">_</span> webView: WKWebView, didFinish navigation: WKNavigation!)</span></span> &#123;</span><br><span class="line">        webView.evaluateJavaScript(<span class="string">"document.body.scrollHeight"</span>, completionHandler: &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>] (result, error) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> `<span class="keyword">self</span>` = <span class="keyword">self</span> <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">var</span> webViewHeight = <span class="type">CGFloat</span>(<span class="number">40.0</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> height = result &#123;</span><br><span class="line">                webViewHeight = <span class="type">CGFloat</span>(height <span class="keyword">as</span>! <span class="type">Float</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.heightBlock?(webViewHeight)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">webView</span><span class="params">(<span class="number">_</span> webView: WKWebView, didFail navigation: WKNavigation!, withError error: Error)</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>http://jingtaotao.top/2018/10/31/WebView%E9%87%87%E5%9D%91%E6%80%BB%E7%BB%93/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GitHub+Hexo+Next博客搭建实战及优化</title>
      <link>http://jingtaotao.top/2018/10/18/GitHub+Hexo+Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AE%9E%E6%88%98%E5%8F%8A%E4%BC%98%E5%8C%96/</link>
      <guid>http://jingtaotao.top/2018/10/18/GitHub+Hexo+Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AE%9E%E6%88%98%E5%8F%8A%E4%BC%98%E5%8C%96/</guid>
      <pubDate>Thu, 18 Oct 2018 01:46:55 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;我的个人博客链接：&lt;a href=&quot;https://jingtaotao.top&quot;&gt;jingtaotao.top&lt;/a&gt;&lt;br&gt;本文是针对有一定编程基础的Coder，采坑完善后的文章。&lt;/p&gt;
&lt;h2 id=&quot;本文描述概念&quot;&gt;&lt;a href=&quot;#本文描述概念&quot; class=
        
      
      </description>
      
      <content:encoded><![CDATA[<p>我的个人博客链接：<a href="https://jingtaotao.top">jingtaotao.top</a><br>本文是针对有一定编程基础的Coder，采坑完善后的文章。</p><h2 id="本文描述概念"><a href="#本文描述概念" class="headerlink" title="本文描述概念"></a>本文描述概念</h2><p>1、文中 <code>yourname</code> 指的是<code>GitHub</code>账号，比如笔者的 <a href="https://github.com/jingtao910429" target="_blank" rel="noopener">jingtao910429</a>。<br>2、文中 <code>主目录</code> 指的是 <code>Hexo</code> 目录。<br>3、文中 <code>站点配置文件</code> 指的是 <code>主目录</code> 下的 <code>_config.yml</code> 文件。<br>4、文中 <code>主题目录</code> 指的是 <code>themes/next</code> 目录。(<code>Next</code>配置主题时会涉及,如果是<code>yilia</code>主题，则是<code>themes/yilia</code>,其他主题同上)<br>5、文中 <code>主题配置文件</code> 指的是 <code>themes</code> 目录下的 <code>_config.yml</code> 文件。</p><h2 id="博客搭建基础"><a href="#博客搭建基础" class="headerlink" title="博客搭建基础"></a>博客搭建基础</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p><code>windows</code> <a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> 下载安装。<br><code>Linux</code> 执行命令 <code>sudo apt-get install nodejs</code></p><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p><code>windows</code> <a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">https://github.com/waylau/git-for-win</a> 安装。<br><code>Linux</code> 执行命令 <code>sudo apt-get install git</code></p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>首先列出常用 <code>Hexo</code> 命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate # 启动本地服务器</span><br><span class="line">$ hexo server # 在浏览器输入 http://localhost:4000/就可以看见网页和模板了</span><br><span class="line">$ hexo new &quot;文章名&quot; #新建文章</span><br><span class="line">$ hexo new page &quot;页面名&quot; #新建页面</span><br><span class="line">$ hexo deploy #发布到远端</span><br></pre></td></tr></table></figure></p><p>对应的简写命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure></p><blockquote><p>新建文件夹，安装 <code>Hexo</code>。<br>进入<code>Hexo</code>安装目录，依次执行如下命令：</p><ul><li><code>npm install hexo-cli -g</code></li><li><code>hexo init</code> 初始化网站，此时，安装目录为 <code>Hexo</code> 主目录。<br>也可以使用 <code>hexo init blogCategory</code>, 注意 <code>blogCategory</code>是Hexo安装目录下的二级目录，如果使用二级目录安装 <code>Hexo</code> 那么 <code>Hexo</code> 的主目录就是二级目录。</li><li><code>hexo s</code> 浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 预览网页。<br><br></li></ul></blockquote><h2 id="GitHub配置部署"><a href="#GitHub配置部署" class="headerlink" title="GitHub配置部署"></a>GitHub配置部署</h2><h3 id="GitHub创建Repositories"><a href="#GitHub创建Repositories" class="headerlink" title="GitHub创建Repositories"></a>GitHub创建Repositories</h3><p>创建如图的<code>GitHub.io</code>仓库，注意：<code>yourname.github.io</code>中<code>yourname</code>和Github上对应，如下图：</p><p><img src="https://raw.githubusercontent.com/jingtao910429/Blog-Back-Up/master/photos/hexo-next-githubIo.jpg" alt="创建如图的GitHub.io仓库"></p><p>将主目录下<code>_config.yml</code>中的<code>deploy</code>修改如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:yourname/yourname.github.io.git  </span><br><span class="line">    #这里的网址填你自己的，这里使用的SSH地址，也可以使用https</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></p><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><p>执行命令 <code>ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;</code> enter即可。秘钥生成完毕，会得到两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>, <code>vim id_rsa.pub</code>打开文件，copy。进入 <a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> </p><p><img src="https://raw.githubusercontent.com/jingtao910429/Blog-Back-Up/master/photos/ssh.jpg" alt="SSH"></p><p>将复制的内容粘贴到Key的输入框，title任意。</p><h3 id="hexo-deploy-出错修正，多数博客未涉及解决方案"><a href="#hexo-deploy-出错修正，多数博客未涉及解决方案" class="headerlink" title="hexo deploy 出错修正，多数博客未涉及解决方案"></a>hexo deploy 出错修正，多数博客未涉及解决方案</h3><blockquote><ul><li><code>deploy not found： git</code><br>解决方案：执行 <code>npm install hexo-deployer-git --save</code> 语句后， 再部署即可。<br>该语句执行后可能会出现<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR Local hexo not found</span><br><span class="line">ERROR Try running: &apos;npm install hexo --save&apos;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>导致这个原因为在自己的博客文件夹中,.gitignore文件中添加了node_modules/,导致更新的时候,这个文件夹被忽略，没有被更新上去。</li><li>解决方案:<br>  1、 cmd进入主目录<br>  2、 执行 npm install<br>  3、 执行 hexo server<br>  4、 执行成功后，再到博客下的git中执行 <code>Hexo</code> 命令可以执行成功。</li></ul></blockquote><p><br></p><h2 id="添加主题"><a href="#添加主题" class="headerlink" title="添加主题"></a>添加主题</h2><h3 id="Next主题添加"><a href="#Next主题添加" class="headerlink" title="Next主题添加"></a>Next主题添加</h3><p><code>cd</code> 到主目录下，然后执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>编辑站点配置文件中<code>theme</code>属性，将其由<code>landscape</code>改为<code>next</code>。<br>在主目录执行部署Hexo指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 清理缓存</span><br><span class="line">hexo clean</span><br><span class="line">// 生成文件</span><br><span class="line">hexo generate</span><br><span class="line">// 部署</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><h3 id="yilia主题添加"><a href="#yilia主题添加" class="headerlink" title="yilia主题添加"></a>yilia主题添加</h3><p>添加<code>yilia</code>主题，可以参考 <a href="https://www.cnblogs.com/jackyroc/p/7681938.html" target="_blank" rel="noopener">我是如何利用Github Pages搭建起我的博客，细数一路的坑</a><br><br></p><h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><p>主题具体优化可参考 <a href="http://wangwlj.com/2017/09/09/blog-opti/" target="_blank" rel="noopener">Hexo搭建的GitHub博客之优化</a><br>其中有几个地方对于Coder来说比较重要的笔者没有涉及到:</p><blockquote><p><strong><em><code>1、标题之间间隔，行间隔</code></em></strong><br><strong><em><code>2、背景圆角</code></em></strong><br><strong><em><code>3、Gemini透明度设置</code></em></strong><br><strong><em><code>4、代码Copy功能</code></em></strong><br><strong><em><code>5、代码折叠</code></em></strong><br><strong><em><code>6、gitalk集成中比较容易出错的地方</code></em></strong></p></blockquote><p>针对以上问题，下面列出解决方案</p><h3 id="标题之间间隔，行间隔"><a href="#标题之间间隔，行间隔" class="headerlink" title="标题之间间隔，行间隔"></a>标题之间间隔，行间隔</h3><p>在<code>Next</code>主题下，是没有对<code>post-body</code>下的<code>p, h1, h2, h3, h4, h5, h6, ul</code>设置相应的样式，所以产生<code>user agent stylesheet</code>浏览器默认样式表,所以打开<code>\themes\next\source\css\_custom\custom.styl</code>下添加代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin-block-start</span>: <span class="number">0.3em</span>;</span><br><span class="line">  <span class="attribute">margin-block-end</span>: <span class="number">0.3em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>打开<code>\themes\next\source\css\_custom\components\post\post-expand.styl</code>修改代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> &#123;</span><br><span class="line">  +desktop() &#123; text-align: justify; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123;</span><br><span class="line">    //此处可以控制top和bottom的值，来符合页面要求</span><br><span class="line">    <span class="selector-tag">padding-top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    //padding-bottom: 5px;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.header-anchor</span>&#123;</span><br><span class="line">      <span class="attribute">float</span>: right;</span><br><span class="line">      <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="attribute">color</span>: $grey-light;</span><br><span class="line">      <span class="attribute">border-bottom-style</span>: none;</span><br><span class="line">      <span class="attribute">visibility</span>: hidden;</span><br><span class="line"></span><br><span class="line">      &amp;:hover&#123;</span><br><span class="line">        <span class="selector-tag">color</span>: <span class="selector-tag">inherit</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> <span class="selector-class">.header-anchor</span>&#123;</span><br><span class="line">      <span class="attribute">visibility</span>: visible;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; <span class="attribute">list-style</span>: circle; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid $gray-lighter;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="背景圆角"><a href="#背景圆角" class="headerlink" title="背景圆角"></a>背景圆角</h3><p>打开<code>\themes\next\source\css\_variables\Gemini.styl</code>下添加代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$border-radius-inner              = 10px //圆角设置</span><br><span class="line">$border-radius                    = 10px //圆角设置</span><br></pre></td></tr></table></figure></p><h3 id="Gemini透明度设置"><a href="#Gemini透明度设置" class="headerlink" title="Gemini透明度设置"></a>Gemini透明度设置</h3><p>主要是通过修改CSS样式来实现<br><div><div class="fold_hider"><div class="close hider_title">1、文章部分</div></div><div class="fold"><p><code>themes/next/source/css/_schemes/Gemini/index.styl</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: $content-desktop-padding;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.7);</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow-inner;</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius-inner;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div><br><div><div class="fold_hider"><div class="close hider_title">2、阅读全文按钮</div></div><div class="fold"><p><code>/themes/next/source/css/_variables/Pisces.styl</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$btn-default-radius           = 2px</span><br><span class="line">$btn-default-bg               = rgba(255,255,255,0.5)</span><br><span class="line">$btn-default-color            = $text-color</span><br><span class="line">$btn-default-border-color     = $text-color</span><br><span class="line">$btn-default-hover-color      = white</span><br><span class="line">$btn-default-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure></p></div></div><br><div><div class="fold_hider"><div class="close hider_title">3、分页部分</div></div><div class="fold"><p><code>/themes/next/source/css/_schemes/Gemini/index.styl</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  .prev, .next, .page-number &#123;</span><br><span class="line">    <span class="selector-tag">margin-bottom</span>: <span class="selector-tag">initial</span>;</span><br><span class="line">    <span class="selector-tag">top</span>: <span class="selector-tag">initial</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">margin</span>: <span class="selector-tag">sboffset</span> 0 0;</span><br><span class="line">  <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(255,255,255,0<span class="selector-class">.7</span>);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span> 0 10<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div><br><div><div class="fold_hider"><div class="close hider_title">4、评论区部分</div></div><div class="fold"><p><code>/themes/next/source/css/_schemes/Gemini/index.styl</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.comments</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: $content-desktop-padding;</span><br><span class="line">  <span class="attribute">margin</span>: initial;</span><br><span class="line">  <span class="attribute">margin-top</span>: sboffset;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.7);</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow;</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div><br><div><div class="fold_hider"><div class="close hider_title">5、侧栏菜单界面</div></div><div class="fold"><p><code>/themes/next/source/css/_schemes/Pisces/_layout.styl</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: $sidebar-desktop;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255,255,255,0.7);</span><br><span class="line">  <span class="attribute">box-shadow</span>: $box-shadow-inner;</span><br><span class="line">  <span class="attribute">border-radius</span>: $border-radius-inner;</span><br><span class="line"></span><br><span class="line">  +desktop-large() &#123;</span><br><span class="line">    <span class="selector-class">.container</span> &amp; &#123; <span class="attribute">width</span>: $sidebar-desktop; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  +<span class="selector-tag">tablet</span>() &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">border-radius</span>: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  +<span class="selector-tag">mobile</span>() &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">border-radius</span>: initial;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></div></div><br><div><div class="fold_hider"><div class="close hider_title">6、个人资料界面</div></div><div class="fold"><p><code>/themes/next/source/css/_schemes/Pisces/_sidebar.styl</code><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">//padding: 20px 10px 0;</span><br><span class="line">  <span class="selector-tag">box-sizing</span>: <span class="selector-tag">border-box</span>;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(255,255,255,0<span class="selector-class">.7</span>);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  if (hexo-config('motion.enable') and hexo-config('motion.transition.sidebar')) &#123; opacity: 0; &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.affix</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: $sidebar-offset;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p></div></div><br>其他<code>Next</code>主题请参考修改。</p><h3 id="代码Copy功能"><a href="#代码Copy功能" class="headerlink" title="代码Copy功能"></a>代码Copy功能</h3><p>参考 <a href="https://www.ofind.cn/blog/HEXO/HEXO%E4%BC%98%E5%8C%96%E4%B9%8B%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%B7%BB%E5%8A%A0%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD.html" target="_blank" rel="noopener">HEXO优化之（二）—-添加复制功能</a></p><p>功能添加出现<code>Clipboard is not defined</code>错误，需要修改一下Clipboard的源码，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Clipboard = fuction()&#123;....&#125;;</span><br><span class="line"><span class="comment">//在Clipboard定义后面增加</span></span><br><span class="line">$.Clipboard = Clipboard;<span class="comment">//这是我增加的代码</span></span><br></pre></td></tr></table></figure></p><p>使用时代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> clipboard = <span class="keyword">new</span> $.Clipboard(<span class="string">'.btn'</span>, &#123;</span><br><span class="line">    text: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//var ue = UM.getEditor('txtContent',&#123;&#125;);</span></span><br><span class="line">        <span class="comment">//ue.queryCommandValue( 'insertcode' );</span></span><br><span class="line">        <span class="keyword">return</span> $(<span class="string">"#"</span>+domId).val();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">clipboard.on(<span class="string">'success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//console.log(e);</span></span><br><span class="line">    e.clearSelection();</span><br><span class="line">&#125;);</span><br><span class="line">clipboard.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//console.log(e);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="代码折叠"><a href="#代码折叠" class="headerlink" title="代码折叠"></a>代码折叠</h3><p>主要参考 <a href="https://blog.rmiao.top/hexo-fold-block/" target="_blank" rel="noopener">Hexo Next博客添加折叠块功能添加折叠代码块</a></p><h3 id="Gitalk集成中比较容易出错的地方"><a href="#Gitalk集成中比较容易出错的地方" class="headerlink" title="Gitalk集成中比较容易出错的地方"></a>Gitalk集成中比较容易出错的地方</h3><p>主要参考 <a href="https://asdfv1929.github.io/2018/01/20/gitalk/" target="_blank" rel="noopener">Hexo NexT主题中集成gitalk评论系统</a><br>基本可以顺利集成下来，但是有几个概念笔者并没有阐述清楚：</p><h4 id="Homepage-URL-和-Authorization-callback-URL的设置问题"><a href="#Homepage-URL-和-Authorization-callback-URL的设置问题" class="headerlink" title="Homepage URL 和 Authorization callback URL的设置问题"></a><code>Homepage URL</code> 和 <code>Authorization callback URL</code>的设置问题</h4><p>这两个值对应的是站点地址，也就是对外的访问网址，比如 <code>https://jingtao910429.github.io</code>,如果绑定了域名信息，则是个人域名，比如 <code>https://jingtaotao.top</code></p><h4 id="主目录配置中的repo设置"><a href="#主目录配置中的repo设置" class="headerlink" title="主目录配置中的repo设置"></a>主目录配置中的repo设置</h4><p>repo 对应的是<code>GitHub</code>上的repo地址，比如 <code>jingtao910429.github.io</code></p><p><br></p>]]></content:encoded>
      
      <comments>http://jingtaotao.top/2018/10/18/GitHub+Hexo+Next%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%AE%9E%E6%88%98%E5%8F%8A%E4%BC%98%E5%8C%96/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
